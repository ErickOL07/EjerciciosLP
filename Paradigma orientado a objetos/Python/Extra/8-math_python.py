"""
Este programa demuestra el uso de las principales funciones de manipulaciÃ³n y redondeo de nÃºmeros en Python.
Cada funciÃ³n es explicada con ejemplos claros.

ðŸ“Œ Funciones incluidas:
- round()   â†’ Redondeo de nÃºmeros
- abs()     â†’ Valor absoluto
- pow()     â†’ Potencias
- divmod()  â†’ DivisiÃ³n y residuo en una sola operaciÃ³n
- int()     â†’ ConversiÃ³n a entero
- float()   â†’ ConversiÃ³n a flotante
- trunc()   â†’ EliminaciÃ³n de decimales sin redondeo
- ceil()    â†’ Redondeo hacia arriba
- floor()   â†’ Redondeo hacia abajo
"""

# 1. round(n, ndigits) - Redondea un nÃºmero a `ndigits` decimales
num1 = 3.14159
print("round(3.14159, 2):", round(num1, 2))  # Redondea a 2 decimales â†’ 3.14
print("round(3.14159, 3):", round(num1, 3))  # Redondea a 3 decimales â†’ 3.142

# 2. abs(n) - Devuelve el valor absoluto de un nÃºmero
print("abs(-10):", abs(-10))  # Devuelve 10
print("abs(3.5):", abs(3.5))  # Devuelve 3.5

# 3. pow(base, exponente, [mod]) - Calcula la potencia (opcionalmente mÃ³dulo)
print("pow(2, 3):", pow(2, 3))  # 2Â³ = 8
print("pow(2, 3, 5):", pow(2, 3, 5))  # (2Â³) % 5 = 3

# 4. divmod(a, b) - Retorna la divisiÃ³n entera y el residuo
print("divmod(10, 3):", divmod(10, 3))  # (3, 1) â†’ 10 Ã· 3 = 3 cociente, 1 residuo

# 5. int(x) - Convierte un nÃºmero a entero (truncando los decimales)
print("int(7.9):", int(7.9))  # Devuelve 7
print("int(-7.9):", int(-7.9))  # Devuelve -7

# 6. float(x) - Convierte un nÃºmero o cadena en flotante
print("float(5):", float(5))  # Devuelve 5.0
print("float('3.14'):", float("3.14"))  # Convierte string en flotante


import math  # LibrerÃ­a de funciones matemÃ¡ticas

# ----------------------------
# ðŸ”¹ 1. Redondeo y valores absolutos
# ----------------------------
print("math.ceil(4.1):", math.ceil(4.1))      # Redondeo hacia arriba â†’ 5
print("math.floor(4.9):", math.floor(4.9))    # Redondeo hacia abajo â†’ 4
print("math.trunc(7.9):", math.trunc(7.9))    # Trunca sin redondear â†’ 7
print("math.fabs(-10.5):", math.fabs(-10.5))  # Valor absoluto â†’ 10.5

# ----------------------------
# ðŸ”¹ 2. Potencias y raÃ­ces
# ----------------------------
print("math.pow(2, 3):", math.pow(2, 3))    # 2Â³ = 8.0
print("math.sqrt(25):", math.sqrt(25))      # RaÃ­z cuadrada de 25 â†’ 5.0
print("math.cbrt(27):", math.pow(27, 1/3))  # RaÃ­z cÃºbica de 27 â†’ 3.0
print("math.exp(1):", math.exp(1))          # Exponencial de 1 â†’ e^1 = 2.718

# ----------------------------
# ðŸ”¹ 3. Logaritmos
# ----------------------------
print("math.log(100, 10):", math.log(100, 10))  # Logaritmo base 10 de 100 â†’ 2
print("math.log2(8):", math.log2(8))            # Logaritmo base 2 de 8 â†’ 3
print("math.log10(1000):", math.log10(1000))    # Logaritmo base 10 de 1000 â†’ 3

# ----------------------------
# ðŸ”¹ 4. Funciones trigonomÃ©tricas
# ----------------------------
angulo = math.radians(45)  # Convertir grados a radianes
print("math.sin(45Â°):", math.sin(angulo))      # Seno de 45Â°
print("math.cos(45Â°):", math.cos(angulo))      # Coseno de 45Â°
print("math.tan(45Â°):", math.tan(angulo))      # Tangente de 45Â°
print("math.asin(0.707):", math.degrees(math.asin(0.707)))  # Arco seno
print("math.acos(0.707):", math.degrees(math.acos(0.707)))  # Arco coseno
print("math.atan(1):", math.degrees(math.atan(1)))         # Arco tangente

# ----------------------------
# ðŸ”¹ 5. Funciones hiperbÃ³licas
# ----------------------------
print("math.sinh(1):", math.sinh(1))  # Seno hiperbÃ³lico
print("math.cosh(1):", math.cosh(1))  # Coseno hiperbÃ³lico
print("math.tanh(1):", math.tanh(1))  # Tangente hiperbÃ³lica

# ----------------------------
# ðŸ”¹ 6. ManipulaciÃ³n de nÃºmeros especiales
# ----------------------------
print("math.isfinite(10):", math.isfinite(10))    # Â¿Es un nÃºmero finito? â†’ True
print("math.isinf(math.inf):", math.isinf(math.inf))  # Â¿Es infinito? â†’ True
print("math.isnan(math.nan):", math.isnan(math.nan))  # Â¿Es NaN (Not a Number)? â†’ True

# ----------------------------
# ðŸ”¹ 7. Constantes matemÃ¡ticas
# ----------------------------
print("math.pi:", math.pi)          # Pi (Ï€) â†’ 3.1415926535
print("math.e:", math.e)            # NÃºmero de Euler (e) â†’ 2.7182818284
print("math.tau:", math.tau)        # Tau (2Ï€) â†’ 6.2831853071
print("math.inf:", math.inf)        # Infinito
print("math.nan:", math.nan)        # NaN (Not a Number)
